- name: Create a master MPI user
  user:
    name: "{{ mpi_user_name }}"
    password: "{{ mpi_user_name | password_hash('sha512') }}"
    state: present
    shell: /bin/bash       
    system: no             
    createhome: yes        
    home: /home/{{ mpi_user_name }}
    generate_ssh_key: yes
    ssh_key_file: .ssh/id_rsa
  when: inventory_hostname == mpi_master_hostname

- name: Create authorized_keys file
  become_user: "{{ mpi_user_name }}"
  file:
    path: /home/{{ mpi_user_name }}/.ssh/authorized_keys
    owner: "{{ mpi_user_name }}"
    group: "{{ mpi_user_name }}"
    mode: 0600
    state: touch
  when: inventory_hostname == mpi_master_hostname

- name: Place public key into authorized_keys
  become_user: "{{ mpi_user_name }}"
  shell: cat /home/{{ mpi_user_name }}/.ssh/id_rsa.pub >> /home/{{ mpi_user_name }}/.ssh/authorized_keys
  when: inventory_hostname == mpi_master_hostname

# This is necesary because ansible create the home directory with 
# root as group and owner. So we need MPI user be the group and owner
# - name: Change MPI user home dir permissions
#   shell: chown {{ mpi_user_name }}:{{ mpi_user_name }} /home/{{ mpi_user_name }}

- name: Create MPI test directory
  become_user: "{{ mpi_user_name }}"
  file: path="/home/{{ mpi_user_name }}/test" state=directory mode=0755
  when: inventory_hostname == mpi_master_hostname

- name: Download hello world example
  become_user: "{{ mpi_user_name }}"
  get_url: 
    url: https://www.open-mpi.org/papers/workshop-2006/hello.c
    dest: "/home/{{ mpi_user_name }}/test/hello.c"
  when: inventory_hostname == mpi_master_hostname

- name: Compiling hellow world test ...
  become_user: "{{ mpi_user_name }}"
  shell: mpicc /home/{{ mpi_user_name }}/test/hello.c -o /home/{{ mpi_user_name }}/test/hello
  when: inventory_hostname == mpi_master_hostname

- name: Running Hello world test ...
  become_user: "{{ mpi_user_name }}"
  shell: mpirun /home/{{ mpi_user_name }}/test/hello
  register: world
  become: no
  when: inventory_hostname == mpi_master_hostname

- debug: msg="Hello world success!"
  when: "'Hello, World, I am 0 of 1' in world.stdout_lines"
